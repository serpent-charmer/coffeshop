/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package coffeshop;

import coffeshop.order.event.OrderEvent;
import coffeshop.order.event.OrderEventBuilder;
import coffeshop.order.exceptions.OrderIllegalStateException;
import coffeshop.service.OrderServiceImpl;

import java.sql.SQLException;
import java.sql.Timestamp;
import java.time.LocalDateTime;

public class App {

    public static void main(String[] args) throws SQLException {

//        System.out.println(EventType.get("S"));
//        OrderServiceImpl orderService = new OrderServiceImpl();
//        OrderEvent orderEvent = new OrderEvent(null, 0, null);
//        OrderRegistered or = new OrderRegistered(orderEvent, 0, null, 0, 0);
//
//        orderService.publishEvent(or);
        DbUtil.prepare();
        OrderEvent register = OrderEventBuilder.get(23,
                        0,
                        Timestamp.valueOf(LocalDateTime.now()))
                .register(0, Timestamp.valueOf(LocalDateTime.now().plusHours(8)),
                        0, 0);
        OrderEvent process = OrderEventBuilder.get(23,
                        0,
                        Timestamp.valueOf(LocalDateTime.now()))
                .process();
        OrderEvent cancel = OrderEventBuilder.get(23,
                        0,
                        Timestamp.valueOf(LocalDateTime.now()))
                .cancel("no money");


        try {
            register.publish();
            process.publish();
            cancel.publish();
        } catch (OrderIllegalStateException e) {
            e.printStackTrace();
        }

//        OrderRegistered or = new OrderRegistered(orderEvent, 0, null, 0, 0);
        try {
//            OrderEventBuilder.get(21,
//                            0,
//                            Timestamp.valueOf(LocalDateTime.now()))
//                    .register(0, Timestamp.valueOf(LocalDateTime.now().plusHours(8)),
//                            0, 0).publish();
            OrderEventBuilder.get(21,
                            0,
                            Timestamp.valueOf(LocalDateTime.now()))
                    .process().publish();
            OrderEventBuilder.get(21,
                            0,
                            Timestamp.valueOf(LocalDateTime.now()))
                    .out().publish();
        } catch (OrderIllegalStateException e) {
            e.printStackTrace();
        }

        new OrderServiceImpl().findOrder(21);


//        Connection connection = null;
//        try {
//            // create a database connection
//            connection = DriverManager.getConnection("jdbc:sqlite:coffeshop.db");
//            Statement statement = connection.createStatement();
//            statement.setQueryTimeout(30);  // set timeout to 30 sec.
//
//            statement.executeUpdate("drop table if exists person");
//            statement.executeUpdate("create table person (id integer, name string)");
//            statement.executeUpdate("insert into person values(1, 'leo')");
//            statement.executeUpdate("insert into person values(2, 'yui')");
//            ResultSet rs = statement.executeQuery("select * from person");
//            while (rs.next()) {
//                // read the result set
//                System.out.println("name = " + rs.getString("name"));
//                System.out.println("id = " + rs.getInt("id"));
//            }
//        } catch (SQLException e) {
//            // if the error message is "out of memory",
//            // it probably means no database file is found
//            System.err.println(e.getMessage());
//        } finally {
//            try {
//                if (connection != null)
//                    connection.close();
//            } catch (SQLException e) {
//                // connection close failed.
//                System.err.println(e.getMessage());
//            }
//        }


    }
}
